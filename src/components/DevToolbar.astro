---
const { activeItemID } = Astro.props;
const navItems = [
  { 
    id: 'home', 
    label: 'Home', 
    href: '/',
    icon: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25" /></svg>'
  },
  { 
    id: 'blog', 
    label: 'Blog', 
    href: '/blog/',
    icon: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25" /></svg>'
  },
  { 
    id: 'cv', 
    label: 'CV', 
    href: '/cv',
    icon: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M15 9h3.75M15 12h3.75M15 15h3.75M4.5 19.5h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5zm6-10.125a1.875 1.875 0 11-3.75 0 1.875 1.875 0 013.75 0zm1.294 6.336a6.721 6.721 0 01-3.17.789 6.721 6.721 0 01-3.168-.789 3.376 3.376 0 016.338 0z" /></svg>'
  }
];
---

<div id="dev-bar" class="fixed bottom-4 left-0 right-0 z-50 flex justify-center">
  <div id="bar-container" class="bg-[#1b1b1f] border border-[#383838] rounded-t-lg px-1 py-0.5 flex items-center gap-0.5">
    {navItems.map(item => (
      <a
        href={item.href}
        data-astro-prefetch
        class={`item group relative ${activeItemID === item.id ? 'active' : ''}`}
      >
        <div class="icon p-1.5 hover:bg-[#ffffff1a] rounded transition-colors">
          <div class="w-4 h-4 text-[#fff]" set:html={item.icon} />
          <div class="notification"></div>
        </div>
        <span class="item-tooltip opacity-0 group-hover:opacity-100 absolute bottom-full left-1/2 -translate-x-1/2 mb-1 px-1.5 py-0.5 text-[10px] bg-[#1b1b1f] text-white rounded whitespace-nowrap">
          {item.label}
        </span>
      </a>
    ))}
    <div class="separator mx-1.5 h-3 w-[1px] bg-[#383838]"></div>
    <button id="theme-toggle" class="item group relative" data-theme-toggle>
      <div class="icon p-1.5 hover:bg-[#ffffff1a] rounded transition-colors">
        <div id="theme-toggle-dark-icon" class="w-4 h-4 text-[#fff]">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z" />
          </svg>
        </div>
        <div id="theme-toggle-light-icon" class="hidden w-4 h-4 text-[#fff]">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z" />
          </svg>
        </div>
        <div class="notification"></div>
      </div>
      <span class="item-tooltip opacity-0 group-hover:opacity-100 absolute bottom-full left-1/2 -translate-x-1/2 mb-1 px-1.5 py-0.5 text-[10px] bg-[#1b1b1f] text-white rounded whitespace-nowrap">
        Toggle theme
      </span>
    </button>
  </div>
</div>

<style>
  #dev-bar {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  }
  
  .item.active .icon {
    background-color: rgba(255, 255, 255, 0.1);
  }

  .notification {
    position: absolute;
    top: 1px;
    right: 1px;
    width: 4px;
    height: 4px;
    border-radius: 50%;
  }

  .notification[data-active] {
    background-color: #4ade80;
  }
</style>

<script>
  // This script will run on every page navigation
  function initTheme() {
    const themeToggle = document.querySelector('[data-theme-toggle]');
    const darkIcon = document.getElementById('theme-toggle-dark-icon');
    const lightIcon = document.getElementById('theme-toggle-light-icon');
    const html = document.documentElement;
    const savedTheme = localStorage.getItem('theme') || 'light';
    
    const updateTheme = (theme) => {
      html.dataset.theme = theme;
      localStorage.setItem('theme', theme);
      // Update icons
      if (theme === 'dark') {
        darkIcon?.classList.add('hidden');
        lightIcon?.classList.remove('hidden');
      } else {
        darkIcon?.classList.remove('hidden');
        lightIcon?.classList.add('hidden');
      }
    }

    // Set initial theme
    updateTheme(savedTheme);
    
    themeToggle?.addEventListener('click', () => {
      const currentTheme = html.dataset.theme;
      const newTheme = currentTheme === 'light' ? 'dark' : 'light';
      updateTheme(newTheme);
    });
  }

  // Run on initial page load
  initTheme();

  // Run on view transitions
  document.addEventListener('astro:page-load', () => {
    initTheme();
  });
</script>